% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trans.R
\name{trans.lm}
\alias{trans.lm}
\title{Transductive inference for linear model}
\usage{
trans.lm(
  formula,
  data,
  param,
  Z,
  new.Z,
  X = NULL,
  new.X = NULL,
  wts = NULL,
  alg = "loess",
  random.seed = NULL,
  other.params = NULL,
  folds = NULL
)
}
\arguments{
\item{formula}{The formula for lm() regression}

\item{data}{The dataframe for lm() regression}

\item{param}{The coefficients to conduct transductive inference, can be a mixture of string names and integer indices}

\item{Z}{The dataframe for covariate shift attributes}

\item{new.Z}{New data for the covariate shift attributes}

\item{X}{The dataframe for conditioning attributes; need to be a subset of Z; if not given, we use Z}

\item{new.X}{New data for the conditioning attributes; need to be a subset of new.Z; if not given, we use new.Z}

\item{wts}{Optional, pre-specified covariate shift (weights); if not given, we automatically fit using grf package}

\item{alg}{Optional, a string for name of algorithm in fitting the conditional mean of influence functions, current options include `loess` and `grf`}

\item{random.seed}{Optional, random seed for sample splitting}

\item{other.params}{Optional, other parameters for the regression algorithm; can include span and degree for loess}

\item{folds}{Optional, a list of two folds of indices for sample splitting; can be useful to control sample splitting}
}
\value{
Estimate for new conditional parameter, Estimate in default weighted OLS, standard errors and p-values for transductive inference, conditional confidence intervals for the new conditional parameter, standard errors and p-values for weighted OLS
}
\description{
Implement the transductive inference procedure for (weighted) linear regression, wrapping around lm() function
}
\examples{
X = matrix(rnorm(1000*10), nrow=1000)
Y = X \%*\% matrix(c(1,2,3,rep(0,10-3)), ncol=1) + rnorm(1000) * 0.1
Z = data.frame(X[,1:2])
new.Z = data.frame(matrix(runif(500*2), nrow=500)*2-1)
data = data.frame(cbind(X,Y))
lm.mdl = lm(Y~., data = data.frame(X))
trans.lm("Y~.", data, c(1,"X1","X2"), Z, new.Z, alg="grf")

}
